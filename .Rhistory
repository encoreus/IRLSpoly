document()
require(roxygen2)
require(devtools)
document()
load_all()
gen_polychoric(10,0.5,0,0)
devtools::document()
devtools::build()
devtools::document()
devtools::build()
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library('ISLRpoly')
library('IRLSpoly')
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
e
is.integer(2.0)
int(2.0)
x = matrix(1:6,2,3)
dim(x)
devtools::document()
devtools::document()
devtools::build()
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
devtools::document()
devtools::build()
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
devtools::document()
devtools::build()
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
devtools::document()
devtools::build()
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
devtools::document()
devtools::build()
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
x = matrix(1:6,2,3)
x
as.matrix(x)
table(x)
table(x[1,],x[2,])
P = table(x[1,],x[2,])
typeof(P)
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(IRLSpoly)
X = gen_polychoric(1000,0.5,-1:0,0:1)
x
X
esti_polychoric(X)
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(IRLSpoly)
X = gen_polychoric(1000,0.5,0:1,-1:0)
result = esti_polychoric(X)
print((result$rho,result$std,result$iter))
X = gen_polyseries(1000,0.5,-1:1)
esti_polyserial(X)
install.packages("E:/paper1/IRLSpoly_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(IRLSpoly)
X = gen_polyseries(1000,0.5,-1:1)
result = esti_polyserial(X)
result
X = gen_polychoric(1000,0.5,0:1,-1:0)
result = esti_polychoric(X)
print(c(result$rho,result$std,result$iter))
X = gen_polychoric(99,0.5,0:1,-1:0)
result = esti_polychoric(X)
print(c(result$rho,result$std,result$iter))
install.packages("E:/paper1/IRLSpoly_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("E:/paper1/IRLSpoly_0.1.0.tar.gz", repos = NULL, type = "source")
